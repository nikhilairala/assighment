name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  # Job 1: Run Tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test
        continue-on-error: false  # Fail the job if tests fail

  # Job 2: Build and Push Docker Image
  build:
    runs-on: ubuntu-latest
    needs: test  # This job depends on the test job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-app:${GITHUB_SHA} .
          docker push ${{ secrets.DOCKER_USERNAME }}/node-app:${GITHUB_SHA}
  
  # Job 3: Deploy to Kubernetes
  deploy:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Kubernetes Cluster
        run: |
          kubectl config set-cluster k8s-cluster --server=https://<your-cluster-api-endpoint>
          kubectl config set-credentials user --token=${{ secrets.K8S_TOKEN }}
          kubectl config set-context default --cluster=k8s-cluster --user=user
          kubectl config use-context default

      - name: Apply Kubernetes Deployment
        run: |
          kubectl set image deployment/node-app node-app=${{ secrets.DOCKER_USERNAME }}/node-app:${GITHUB_SHA}
          kubectl rollout status deployment/node-app

  # Job 4: Send Slack Notification
  notify:
    runs-on: ubuntu-latest
    needs: deploy  # This job depends on the deploy job
    steps:
      - name: Send Notification on Deployment Status
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment Successful!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Failure Notification on Deployment Status
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment Failed!"}' ${{ secrets.SLACK_WEBHOOK_URL }}
